name: Tests

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      task:
        type: choice
        options: [tests, release]
        default: tests
        description: Only run tests or release a new version to PyPI after tests pass.

jobs:
  tests:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          cache: pip
          cache-dependency-path: pyproject.toml

      - name: Install dependencies
        run: |
          pip install cython
          python setup.py build_ext --inplace
          pip install -e .[test]

      - name: Run Tests
        run: pytest --capture=no --cov --cov-report=xml .

      - name: Codacy coverage reporter
        if: matrix.os == 'ubuntu-latest' && github.repository == github.event.pull_request.head.repo.full_name
        uses: codacy/codacy-coverage-reporter-action@v1
        with:
          project-token: ${{ secrets.CODACY_PROJECT_TOKEN }}
          coverage-reports: coverage.xml

  release:
    runs-on: ubuntu-latest
    needs: tests
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && inputs.task == 'release')
    permissions:
      # For PyPI trusted publishing
      id-token: write
    steps:
      - name: Check out repo
        uses: actions/checkout@v3

      - name: Build dist
        run: |
          pip install build
          python -m build

      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          skip-existing: true
          verbose: true
